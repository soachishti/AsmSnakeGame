Microsoft (R) Macro Assembler Version 6.15.8803		    08/22/15 00:00:56
Keyboard Toggle Keys             (Keybd.asm)		     Page 1 - 1


				TITLE Keyboard Toggle Keys             (Keybd.asm)

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE Macros.inc
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDELIB user32.lib

 00000002			BODY STRUCT 
 00000000  00			    x BYTE 0
 00000001  00			    y BYTE 0
				BODY ENDS

 = 00000025			VK_LEFT		  EQU		000000025h
 = 00000026			VK_UP		  EQU		000000026h
 = 00000027			VK_RIGHT	  EQU		000000027h
 = 00000028			VK_DOWN		  EQU		000000028h
 = 0000004F			maxCol        EQU     79
 = 00000014			maxRow        EQU     20
 = "=======================	wallTop       EQU     "================================================================================"
   ========================
   ========================
   ========="
 = 0000007C			wallLeft      EQU     '|'
 = 00000019			SnakeSpeed    EQU     25
 = 00000064			maxSnakeSize  EQU     100
				      
				GetKeyState PROTO, nVirtKey:DWORD

 00000000			.data
 00000000 01			    col         BYTE    1
 00000001 01			    row         BYTE    1
 00000002  0000000A [		    SnakeBody   BODY    10 DUP(<0,0>)
	    00 00
	   ]
 00000016 03			    currSize    BYTE    3
 00000000			.code

 00000000			InitSnakeBody PROC
 00000000  8A 0D 00000016 R	    mov cl, currSize
 00000006  33 C9		    xor ecx, ecx
				    .WHILE cl
 0000000A  BE 00000002 R	        MOV esi, OFFSET SnakeBody
 0000000F  32 ED		        XOR ch, ch
 00000011  66| C7 04 4E		        MOV BODY PTR [esi + 2 * ECX], 1
	   0001
 00000017  49			        DEC ECX
				    .ENDW
 0000001C			InitSnakeBody ENDP


 0000001C			KeySync PROC
 0000001C  B4 00		    mov ah, 0
				    INVOKE GetKeyState, VK_DOWN
					.IF ah && row < maxRow 
 00000032  FE 05 00000001 R	        INC row
				  	.ENDIF

					INVOKE GetKeyState, VK_UP
				    .IF ah && row > 0
 0000004C  FE 0D 00000001 R	        DEC row
					.ENDIF     

					INVOKE GetKeyState, VK_LEFT
				    .IF ah && col > 0 
 00000066  FE 0D 00000000 R	        DEC col
					.ENDIF  

					INVOKE GetKeyState, VK_RIGHT
				    .IF ah && col < maxCol
 00000080  FE 05 00000000 R	        INC col
					.ENDIF     
 00000086  C3			    ret
 00000087			KeySync ENDP

 00000087			PrintWall PROC
				    mGotoxy 0, 0     
 00000087  52		     1		push edx
 00000088  B6 00	     1	    mov  dh,0
 0000008A  B2 00	     1	    mov  dl,0
 0000008C  E8 00000000 E     1		call Gotoxy
 00000091  5A		     1		pop  edx
				    mWrite wallTop
 00000017		     1		.data				
 00000017 3D 3D 3D 3D 3D     1		??0000 BYTE wallTop,0		
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   00
 00000092		     1		.code
 00000092  52		     1		push edx
 00000093  BA 00000017 R     1		mov  edx,OFFSET ??0000
 00000098  E8 00000000 E     1		call Writestring
 0000009D  5A		     1		pop  edx
				    mGotoxy 0, maxRow    
 0000009E  52		     1		push edx
 0000009F  B6 14	     1	    mov  dh,maxRow
 000000A1  B2 00	     1	    mov  dl,0
 000000A3  E8 00000000 E     1		call Gotoxy
 000000A8  5A		     1		pop  edx
				    mWrite wallTop
 00000068		     1		.data				
 00000068 3D 3D 3D 3D 3D     1		??0001 BYTE wallTop,0		
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   00
 000000A9		     1		.code
 000000A9  52		     1		push edx
 000000AA  BA 00000068 R     1		mov  edx,OFFSET ??0001
 000000AF  E8 00000000 E     1		call Writestring
 000000B4  5A		     1		pop  edx
				        
 000000B5  B1 13		    mov cl, maxRow - 1 
				    .while cl
				        mGotoxy 0, cl   
 000000B9  52		     1		push edx
 000000BA  8A F1	     1	    mov  dh,cl
 000000BC  B2 00	     1	    mov  dl,0
 000000BE  E8 00000000 E     1		call Gotoxy
 000000C3  5A		     1		pop  edx
				        mWrite wallLeft
 000000B9		     1		.data				
 000000B9 7C 00		     1		??0002 BYTE wallLeft,0		
 000000C4		     1		.code
 000000C4  52		     1		push edx
 000000C5  BA 000000B9 R     1		mov  edx,OFFSET ??0002
 000000CA  E8 00000000 E     1		call Writestring
 000000CF  5A		     1		pop  edx
				        mGotoxy maxCol, cl
 000000D0  52		     1		push edx
 000000D1  8A F1	     1	    mov  dh,cl
 000000D3  B2 4F	     1	    mov  dl,maxCol
 000000D5  E8 00000000 E     1		call Gotoxy
 000000DA  5A		     1		pop  edx
				        mWrite wallLeft
 000000BB		     1		.data				
 000000BB 7C 00		     1		??0003 BYTE wallLeft,0		
 000000DB		     1		.code
 000000DB  52		     1		push edx
 000000DC  BA 000000BB R     1		mov  edx,OFFSET ??0003
 000000E1  E8 00000000 E     1		call Writestring
 000000E6  5A		     1		pop  edx
 000000E7  FE C9		        DEC cl
				    .endw
 000000ED  C3			    ret
 000000EE			PrintWall ENDP

 000000EE			isGameOver PROC
				    .IF col == 0 || col == maxCol || row == 0|| row == maxRow
 00000112  B8 00000000		        mov EAX, 0
				    .ENDIF
 00000117  B8 00000001		    mov EAX, 1
 0000011C			isGameOver ENDP

 0000011C			printSnake PROC
				    mGotoxy col, row
 0000011C  52		     1		push edx
 0000011D  8A 35 00000001 R  1	    mov  dh,row
 00000123  8A 15 00000000 R  1	    mov  dl,col
 00000129  E8 00000000 E     1		call Gotoxy
 0000012E  5A		     1		pop  edx
				    mWrite "*"    
 000000BD		     1		.data				
 000000BD 2A 00		     1		??0004 BYTE "*",0		
 0000012F		     1		.code
 0000012F  52		     1		push edx
 00000130  BA 000000BD R     1		mov  edx,OFFSET ??0004
 00000135  E8 00000000 E     1		call Writestring
 0000013A  5A		     1		pop  edx
				      
				    invoke Sleep, SnakeSpeed

				    mGotoxy col, row
 00000142  52		     1		push edx
 00000143  8A 35 00000001 R  1	    mov  dh,row
 00000149  8A 15 00000000 R  1	    mov  dl,col
 0000014F  E8 00000000 E     1		call Gotoxy
 00000154  5A		     1		pop  edx
				    mWrite " " 
 000000BF		     1		.data				
 000000BF 20 00		     1		??0005 BYTE " ",0		
 00000155		     1		.code
 00000155  52		     1		push edx
 00000156  BA 000000BF R     1		mov  edx,OFFSET ??0005
 0000015B  E8 00000000 E     1		call Writestring
 00000160  5A		     1		pop  edx
 00000161			printSnake ENDP

 00000161			main PROC
 00000161  E8 FFFFFF21		    call PrintWall

 00000166			    foreverLoop:   
 00000166  E8 FFFFFEB1		        call KeySync
 0000016B  E8 FFFFFF7E		        call isGameOver
				        .IF EAX
 00000174  EB 07		            jmp GameOver
				        .ENDIF
				        
 00000176  E8 FFFFFFA1		        call printSnake        

 0000017B  EB E9		        jmp foreverLoop
				    
 0000017D			    GameOver:
				        ; Do stuff for after gameover
 0000017D  EB E7		        jmp foreverLoop
				    
					exit
 00000186			main ENDP
				END main
Microsoft (R) Macro Assembler Version 6.15.8803		    08/22/15 00:00:56
Keyboard Toggle Keys             (Keybd.asm)		     Symbols 2 - 1




Macros:

                N a m e                 Type

IsDefined  . . . . . . . . . . .	Func
NewLine  . . . . . . . . . . . .	Proc
ShowFlag . . . . . . . . . . . .	Proc
ShowRegister . . . . . . . . . .	Proc
Startup  . . . . . . . . . . . .	Proc
WriteSpace . . . . . . . . . . .	Proc
mDumpMem . . . . . . . . . . . .	Proc
mGotoxy  . . . . . . . . . . . .	Proc
mNewLine . . . . . . . . . . . .	Proc
mReadStr . . . . . . . . . . . .	Proc
mWriteLn . . . . . . . . . . . .	Proc
mWriteStr  . . . . . . . . . . .	Proc
mWrite . . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

BODY . . . . . . . . . . . . . .	 00000002
  x  . . . . . . . . . . . . . .	 00000000	 Byte
  y  . . . . . . . . . . . . . .	 00000001	 Byte
CONSOLE_CURSOR_INFO  . . . . . .	 00000005
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 Byte
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPos  . . . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  maxWinSize . . . . . . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000000C1 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000186 DWord	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ClrScr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InitSnakeBody  . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000001C Public STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
KeySync  . . . . . . . . . . . .	P Near	 0000001C _TEXT	Length= 0000006B Public STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PrintWall  . . . . . . . . . . .	P Near	 00000087 _TEXT	Length= 00000067 Public STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
isGameOver . . . . . . . . . . .	P Near	 000000EE _TEXT	Length= 0000002E Public STDCALL
main . . . . . . . . . . . . . .	P Near	 00000161 _TEXT	Length= 00000025 Public STDCALL
  foreverLoop  . . . . . . . . .	L Near	 00000166 _TEXT	
  GameOver . . . . . . . . . . .	L Near	 0000017D _TEXT	
printSnake . . . . . . . . . . .	P Near	 0000011C _TEXT	Length= 00000045 Public STDCALL


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Byte	 00000017 _DATA	
??0001 . . . . . . . . . . . . .	Byte	 00000068 _DATA	
??0002 . . . . . . . . . . . . .	Byte	 000000B9 _DATA	
??0003 . . . . . . . . . . . . .	Byte	 000000BB _DATA	
??0004 . . . . . . . . . . . . .	Byte	 000000BD _DATA	
??0005 . . . . . . . . . . . . .	Byte	 000000BF _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
NULL . . . . . . . . . . . . . .	Number	 00000000h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
SnakeBody  . . . . . . . . . . .	BODY	 00000002 _DATA	
SnakeSpeed . . . . . . . . . . .	Number	 00000019h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
col  . . . . . . . . . . . . . .	Byte	 00000000 _DATA	
currSize . . . . . . . . . . . .	Byte	 00000016 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
maxCol . . . . . . . . . . . . .	Number	 0000004Fh   
maxRow . . . . . . . . . . . . .	Number	 00000014h   
maxSnakeSize . . . . . . . . . .	Number	 00000064h   
red  . . . . . . . . . . . . . .	Number	 00000004h   
row  . . . . . . . . . . . . . .	Byte	 00000001 _DATA	
wallLeft . . . . . . . . . . . .	Number	 0000007Ch   
wallTop  . . . . . . . . . . . .	Text   	 "================================================================================"
white  . . . . . . . . . . . . .	Number	 0000000Fh   
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
